import Head from 'next/head'
import axios from 'axios'
import { Field, Form, Formik } from 'formik'
// import Button from '@mui/material/Button'
import { useContext, useEffect, useState } from 'react'
import { UserContext } from '../user'
import { getSession, saveSession } from '../user/sessions'
import { SessionContext } from '../Session/context'
import { makeStyles } from '@mui/styles'

const useStyles = makeStyles(
  {
    container: {
      padding: '0 2rem',
    },
    main: {
      minHeight: '100vh',
      padding: '4rem 0',
      flex: '1',
      display: 'flex',
      flexDirection: 'column',
      justifyContent: 'center',
      alignItems: 'center',
    },
    title: {
      margin: '2rem',
      lineHeight: '1.15',
      fontSize: '4rem',
      textAlign: 'center',
    },
    form: {
      display: 'flex',
      flexDirection: 'column',
      gap: '1rem',
      alignItems: 'center',
      justifyContent: 'center',
      flexWrap: 'wrap',
      maxWidth: '800px',
    },
    field: {
      width: '100%',
      display: 'flex',
      justifyContent: 'end',
      '& label': {
        marginRight: '0.5rem',
      },
    },
  },
  { name: 'MuiExample_Component' }
)

export default function Home() {
  const [loading, setLoading] = useState(false)
  const classes = useStyles()
  const { sessionDispatch } = useContext(SessionContext)

  useEffect(() => {
    getSession().then((session) => {
      if (session) {
        window.location.href = '/dashboard'
      }
    })
  }, [])

  const handleLogin = async (values: { email: string; password: string }) => {
    setLoading(true)
    axios({
      method: 'post',
      url: 'http://127.0.0.1:3000/auth/sign_in',
      data: {
        user: values,
      },
    })
      .then(({ data }) => {
        saveSession({ token: data.data.auth_token, email: values.email }).then(
          () => {
            sessionDispatch({
              type: 'SET_LOGGED_IN',
              loggedIn: true,
              email: values.email,
            })
          }
        )
        window.location.href = '/dashboard'
      })
      .catch((response) => {
        console.log(response)
      })
      .finally(() => {
        setLoading(false)
      })
  }

  return (
    <div className={classes.container}>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main className={classes.main}>
        <h1 className={classes.title}>Welcome to trib!</h1>

        <Formik
          initialValues={{
            email: 'email@email.com',
            password: 'Password01',
          }}
          onSubmit={handleLogin}
        >
          <Form className={classes.form}>
            <div className={classes.field}>
              <label htmlFor='email'>Email: </label>
              <Field type='email' name='email' />
            </div>
            <div className={classes.field}>
              <label htmlFor='password'>Password: </label>
              <Field type='password' name='password' />
            </div>
            <button type='submit'>Submit</button>
          </Form>
        </Formik>
      </main>
    </div>
  )
}
